[{"C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\index.js":"1","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\App.js":"2","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\SearchPage.js":"3","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\Info.js":"4","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\Post.js":"5","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\CreatePost.js":"6"},{"size":262,"mtime":1624112981416,"results":"7","hashOfConfig":"8"},{"size":453,"mtime":1624110597152,"results":"9","hashOfConfig":"8"},{"size":6977,"mtime":1624121398891,"results":"10","hashOfConfig":"8"},{"size":99,"mtime":1624110074118,"results":"11","hashOfConfig":"8"},{"size":99,"mtime":1624088147946,"results":"12","hashOfConfig":"8"},{"size":1844,"mtime":1624121185372,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"clqrfp",{"filePath":"16","messages":"17","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":22,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\index.js",[],"C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\App.js",["28","29","30"],"import React, { useState, useEffect } from \"react\";\nimport { render } from \"react-dom\";\nimport { Container } from \"react-bootstrap\";\nimport SearchPage from \"./components/SearchPage\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <Container className=\"text-center p-5\">\n        <h1 style={{ fontWeight: \"900\" }}>Players gonna play play play play play</h1>\n      </Container>\n      <SearchPage />\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\SearchPage.js",["31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52"],"import React, { useState, useEffect } from \"react\";\r\nimport { ButtonGroup, Container, ListGroup, InputGroup, FormControl, Button, CardGroup, Card, Badge, Modal } from \"react-bootstrap\";\r\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport Post from \"./Post\";\r\nimport Info from \"./Info\";\r\nimport CreatePost from \"./CreatePost\";\r\nimport { render } from \"react-dom\";\r\n\r\nfunction SearchPage(props) {\r\n  const [token, setToken] = useState(\"\");\r\n  const [flag, setFlag] = useState(false);\r\n\r\n  const [artist, setArtist] = useState([]);\r\n  const [title, setTitle] = useState([]);\r\n  const [album, setAlbum] = useState([]);\r\n  const [cover, setCover] = useState([]);\r\n  const [date, setDate] = useState([]);\r\n  const [input, setInput] = useState([]);\r\n  const [lyrics, setLyrics] = useState(\"\");\r\n\r\n  const [postTitle, setPostTitle] = useState(\"\");\r\n  const [postContent, setPostContent] = useState(\"\");\r\n  const [postList, setPostList] = useState([]);\r\n  const [activeItem, setActiveItem] = useState({ track_cover: \"\", track_artist: \"\", track_title: \"\", title: \"\", content: \"\" });\r\n\r\n  function refreshList() {\r\n    axios\r\n      .get(\"http://127.0.0.1:8000/api/posts/\")\r\n      .then(res => {\r\n        setPostList(res.data);\r\n        console.log(\"잘받아옴\");\r\n      })\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  useState(() => {\r\n    refreshList();\r\n  }, [postList]);\r\n\r\n  const [modal, setModal] = useState();\r\n\r\n  function toggle() {\r\n    setModal(!modal);\r\n  }\r\n\r\n  function handleSubmit(post) {\r\n    toggle();\r\n    if (post.id) {\r\n      axios.put(`http://localhost:8000/api/posts/${post.id}/`, post).then(res => refreshList());\r\n      return;\r\n    }\r\n\r\n    axios\r\n      .post(\"http://localhost:8000/api/posts/\", post)\r\n      .then(res => refreshList())\r\n      .catch(err => {\r\n        console.log(\"에러:\", err);\r\n      });\r\n  }\r\n\r\n  function handleDelete(post) {\r\n    axios.delete(`http://localhost:8000/api/posts/${post.id}/`).then(res => refreshList());\r\n  }\r\n\r\n  function createPost(c, a, t) {\r\n    const post = { track_cover: c, track_artist: a, track_title: t, title: \"\", content: \"\" };\r\n    setActiveItem(post);\r\n    setModal(!modal);\r\n  }\r\n\r\n  function editPost(post) {\r\n    setActiveItem(post);\r\n    setModal(!modal);\r\n  }\r\n\r\n  function renderPostList() {\r\n    return postList.map(post => (\r\n      <Container>\r\n        <CardGroup>\r\n          <Card>\r\n            <Card.Img variant=\"top\" src={post.track_cover} style={{ width: \"300px\", padding: \"10px\", margin: \"auto\" }} />\r\n            <Card.Body className=\"text-center\">\r\n              <Card.Title>{post.track_title}</Card.Title>\r\n              <Card.Text>{post.track_artist}</Card.Text>\r\n            </Card.Body>\r\n            <Card.Body>\r\n              <Card.Title>{post.title}</Card.Title>\r\n              <Card.Text>{post.content}</Card.Text>\r\n              <div style={{ position: \"absolute\", right: \"10px\", bottom: \"-3px\" }}>\r\n                <Button onClick={() => editPost(post)} variant=\"success\" style={{ margin: \"10px\" }}>\r\n                  수정\r\n                </Button>\r\n                <Button onClick={() => handleDelete(post)} variant=\"danger\" style={{ margin: \"10px\" }}>\r\n                  삭제\r\n                </Button>\r\n              </div>\r\n            </Card.Body>\r\n            <Card.Footer style={{ padding: \"15px\" }}>\r\n              <small className=\"text-muted\">{post.created_at}</small>\r\n            </Card.Footer>\r\n          </Card>\r\n        </CardGroup>\r\n      </Container>\r\n    ));\r\n  }\r\n\r\n  const spotifyApi = new SpotifyWebApi();\r\n\r\n  function getAccessToken() {\r\n    axios.get(\"http://127.0.0.1:8000/spotify/get-access-token\").then(res => setToken(res.data.token));\r\n    // fetch(\"/spotify/get-access-token\")\r\n    //   .then(res => res.json())\r\n    //   .then(data => {\r\n    //     setToken(data[\"token\"]);\r\n    //   });\r\n  }\r\n\r\n  getAccessToken();\r\n\r\n  useEffect(() => {\r\n    spotifyApi.setAccessToken(token);\r\n    console.log(\"토큰:\", token);\r\n  }, [token]);\r\n\r\n  function searchMusic() {\r\n    axios(`https://api.spotify.com/v1/search?q=${input}&type=track&limit=20`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    }).then(res => {\r\n      console.log(\"searchMusic 실행\");\r\n\r\n      const item = res.data.tracks.items;\r\n      let tempArtist = [...artist];\r\n      let tempTitle = [...title];\r\n      let tempCover = [...cover];\r\n\r\n      item.map((e, i) => {\r\n        tempArtist.push(e.album.artists[0].name);\r\n        setArtist(tempArtist);\r\n\r\n        tempTitle.push(e.name);\r\n        setTitle(tempTitle);\r\n\r\n        setAlbum(e.album.name);\r\n\r\n        tempCover.push(e.album.images[1].url);\r\n        setCover(tempCover);\r\n\r\n        setDate(e.album.release_date);\r\n      });\r\n    });\r\n  }\r\n\r\n  function renderSearch() {\r\n    return (\r\n      <div>\r\n        {renderPostList()}\r\n        {modal ? <CreatePost activeItem={activeItem} toggle={toggle} onSave={handleSubmit} /> : null}\r\n\r\n        <Container>\r\n          <InputGroup style={{ width: \"70vw\", margin: \"auto\", marginTop: \"30px\" }}>\r\n            <FormControl\r\n              onChange={e => {\r\n                setInput(e.target.value);\r\n              }}\r\n              onKeyDown={() => {\r\n                setArtist([]);\r\n                setTitle([]);\r\n                setAlbum([]);\r\n                setCover([]);\r\n                setDate([]);\r\n              }}\r\n              onKeyUp={() => searchMusic()}\r\n              type=\"text\"\r\n              placeholder=\"Artist, songs, or albums\"\r\n            />\r\n            <InputGroup.Append>\r\n              <Button onClick={() => searchMusic()} variant=\"dark\" style={{ zIndex: \"-1\" }}>\r\n                Search\r\n              </Button>\r\n            </InputGroup.Append>\r\n          </InputGroup>\r\n        </Container>\r\n\r\n        <Container style={{ width: \"70vw\", margin: \"auto\" }}>\r\n          {title.map((e, i) => {\r\n            {\r\n              return (\r\n                <ListGroup.Item style={{ padding: \"5px\" }}>\r\n                  <img src={cover[i]} style={{ width: \"55px\", marginRight: \"10px\" }}></img>\r\n                  <span>{`${artist[i]} - ${e}`}</span>\r\n                  <Button onClick={() => createPost(cover[i], artist[i], title[i])} variant=\"dark\" style={{ position: \"absolute\", right: \"0\", margin: \"10px\" }}>\r\n                    Posting\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              );\r\n            }\r\n          })}\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Router>\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => {\r\n              return renderSearch();\r\n            }}\r\n          />\r\n        </Switch>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchPage;\r\n","C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\Info.js",[],"C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\Post.js",[],"C:\\Users\\solda\\Desktop\\players-gonna-play-play-play-play-play\\pgppppp\\front-end\\src\\components\\CreatePost.js",[],{"ruleId":"53","severity":1,"message":"54","line":1,"column":17,"nodeType":"55","messageId":"56","endLine":1,"endColumn":25},{"ruleId":"53","severity":1,"message":"57","line":1,"column":27,"nodeType":"55","messageId":"56","endLine":1,"endColumn":36},{"ruleId":"53","severity":1,"message":"58","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":16},{"ruleId":"53","severity":1,"message":"59","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":21},{"ruleId":"53","severity":1,"message":"60","line":2,"column":95,"nodeType":"55","messageId":"56","endLine":2,"endColumn":100},{"ruleId":"53","severity":1,"message":"61","line":2,"column":102,"nodeType":"55","messageId":"56","endLine":2,"endColumn":107},{"ruleId":"53","severity":1,"message":"62","line":3,"column":50,"nodeType":"55","messageId":"56","endLine":3,"endColumn":54},{"ruleId":"53","severity":1,"message":"63","line":3,"column":56,"nodeType":"55","messageId":"56","endLine":3,"endColumn":64},{"ruleId":"53","severity":1,"message":"64","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":12},{"ruleId":"53","severity":1,"message":"65","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":12},{"ruleId":"53","severity":1,"message":"58","line":9,"column":10,"nodeType":"55","messageId":"56","endLine":9,"endColumn":16},{"ruleId":"53","severity":1,"message":"66","line":13,"column":10,"nodeType":"55","messageId":"56","endLine":13,"endColumn":14},{"ruleId":"53","severity":1,"message":"67","line":13,"column":16,"nodeType":"55","messageId":"56","endLine":13,"endColumn":23},{"ruleId":"53","severity":1,"message":"68","line":17,"column":10,"nodeType":"55","messageId":"56","endLine":17,"endColumn":15},{"ruleId":"53","severity":1,"message":"69","line":19,"column":10,"nodeType":"55","messageId":"56","endLine":19,"endColumn":14},{"ruleId":"53","severity":1,"message":"70","line":21,"column":10,"nodeType":"55","messageId":"56","endLine":21,"endColumn":16},{"ruleId":"53","severity":1,"message":"71","line":21,"column":18,"nodeType":"55","messageId":"56","endLine":21,"endColumn":27},{"ruleId":"53","severity":1,"message":"72","line":23,"column":10,"nodeType":"55","messageId":"56","endLine":23,"endColumn":19},{"ruleId":"53","severity":1,"message":"73","line":23,"column":21,"nodeType":"55","messageId":"56","endLine":23,"endColumn":33},{"ruleId":"53","severity":1,"message":"74","line":24,"column":10,"nodeType":"55","messageId":"56","endLine":24,"endColumn":21},{"ruleId":"53","severity":1,"message":"75","line":24,"column":23,"nodeType":"55","messageId":"56","endLine":24,"endColumn":37},{"ruleId":"76","severity":1,"message":"77","line":125,"column":6,"nodeType":"78","endLine":125,"endColumn":13,"suggestions":"79"},{"ruleId":"80","severity":1,"message":"81","line":143,"column":23,"nodeType":"82","messageId":"83","endLine":143,"endColumn":25},{"ruleId":"84","severity":1,"message":"85","line":193,"column":13,"nodeType":"86","messageId":"87","endLine":203,"endColumn":14},{"ruleId":"88","severity":1,"message":"89","line":196,"column":19,"nodeType":"90","endLine":196,"endColumn":86},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'render' is defined but never used.","'ButtonGroup' is defined but never used.","'Badge' is defined but never used.","'Modal' is defined but never used.","'Link' is defined but never used.","'Redirect' is defined but never used.","'Post' is defined but never used.","'Info' is defined but never used.","'flag' is assigned a value but never used.","'setFlag' is assigned a value but never used.","'album' is assigned a value but never used.","'date' is assigned a value but never used.","'lyrics' is assigned a value but never used.","'setLyrics' is assigned a value but never used.","'postTitle' is assigned a value but never used.","'setPostTitle' is assigned a value but never used.","'postContent' is assigned a value but never used.","'setPostContent' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'spotifyApi'. Either include it or remove the dependency array.","ArrayExpression",["91"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",{"desc":"92","fix":"93"},"Update the dependencies array to be: [spotifyApi, token]",{"range":"94","text":"95"},[4056,4063],"[spotifyApi, token]"]